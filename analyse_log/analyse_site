#!/usr/bin/env python3
# _*_ coding:utf-8 _*_
#

#

import matplotlib.pyplot as plt
import numpy as np
import sys
#from matplotlib import pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

#print('Command has', len(sys.argv), 'arguments.')
#print('Argument list is', str(sys.argv))

if len(sys.argv) < 3:
    print("sys.argv[0] file_name view_mode view_switch")
    exit

file_name = sys.argv[1]
#print(file_name)

view_mode = sys.argv[2]
#print(view_mode)

view_switch = sys.argv[3]
#print(view_switch)

file = open(file_name, 'r')
site_file = open('./output/tmp.log', 'w')

read_all = False
while not read_all:
    line = file.readline()
    if not line:
        read_all = True
        break
    line_elements = line.split( )
    # print(line)
    if len(line_elements) > 6:
        # print(line_elements[6])
#I0212 14:31:32.108222 4584] [COV] md_map::UpdatePose - BodyPose 25.119330, -3.804149, -54.131207 m_vecPath:14     and line_elements[7] == "from" and line_elements[8] == "mcu" and line_elements[9] == "04-42"
#I1014 17:11:16.003943 439] [CTRL] [IOT MCU]: wavesensor from mcu 04-42, , SendBuf:aa 22 b8 00 00 00 00 00 01 04 42 03 01 00 00 02 02 00 01 00 00 33 00 01 01 01 00 01 00 00 00 00 00 00 9f 
#I1026 15:16:46.003852 439] [CTRL] [IOT MCU]: wavesensor mcu 04-42, , SendBuf:aa 22 b8 00 00 00 00 00 01 04 42 03 01 00 00 02 04 00 02 00 00 61 00 01 00 00 02 01 00 00 00 00 00 00 6e 
#I1212 16:35:32.425110 399] [MCU] Process0x03_0x37_0x01 - TaskID=10553,sendID=10553,recvcount=117900,walkstate=1,sideState=0,version=11381, battStat=0,McuADv=147,McuADa=174,battery=71,wheelL=16, wheelR=-16
#I1212 13:10:47.982272 459] [MCU] Process0x03_0x37_0x01 - TaskID=10466,sendID=10466,recvcount=695500,walkstate=2,sideState=0,version=11461,berror=0,McuADv=158,McuADa=13,battery=83
#I1224 08:21:33.238793 456] [MCU] Process0x03_0x37_0x01 - TaskID=11168,sendID=11168,recvcount=1872300,walkstate=2,sideState=0,version=11481, battStat=1,McuADv=151,McuADa=185,battery=52,wheelL=2, wheelR=4, Algorithm=0, Ultrasonic=0, robotType=16
#I1226 09:41:22.800747 453] [MCU] Process0x03_0x37_0x01 - TaskID=10848,sendID=10848,recvcount=2613500,walkstate=2,sideState=0,version=11491, battStat=1,McuADv=161,McuADa=72,battery=80,wheelL=2, wheelR=4, Algorithm=0, Ultrasonic=0, robotType=16
#I0109 10:19:35.172840 455] [MCU] Process0x03_0x37_0x01 - TaskID=10158,sendID=10158,recvcount=1894900,walkstate=2,sideState=0,version=11611, battStat=10,McuADv=134,McuADa=0,battery=3,wheelL=0, wheelR=0, Algorithm=1, Ultrasonic=0, robotType=2
#兼容M6日志
        if "battery" in line_elements[6] and len(line_elements) < 8:
            line1 = line_elements[6].replace("=",",")
            # line1 = line_elements[6:].replace("=",",").replace(" ","")
            # print(line1)
            line2 = line1.split(",")
            # print(line2)
            #line2[13] = line2[13] * 0.01
            batstat=line2[13]
            mcuadv=line2[15]
            mcuada=line2[17]
            battery=line2[19]
            site_file.write(line_elements[1] + "," + batstat + "," + mcuadv + ","  + mcuada + ',' + battery + "\n")

#兼容M7 M7pro日志
        elif "battery" in line_elements[7] and len(line_elements) > 8:
            # line1 = line_elements[5:].replace(" ","").replace("=",",")
            # line2 = line1.split(",")
            batstat=line_elements[7].replace("=", ",").split(',')[1]
            mcuadv=line_elements[7].replace("=", ",").split(',')[3]
            mcuada=line_elements[7].replace("=", ",").split(',')[5]
            battery=line_elements[7].replace("=", ",").split(',')[7]
            site_file.write(line_elements[1] + "," + batstat + "," + mcuadv + ","  + mcuada + ',' + battery + "\n")

        elif line_elements[7] != "callback" :
            if line_elements[6] == "wavesensor" :
                site_file.write(line_elements[1] + "," + line_elements[34] + "," + line_elements[35] + "\n")
            else: 
                if len(line_elements) > 9:
                    site_file.write(line_elements[1] + "," + line_elements[7] + line_elements[8] + line_elements[9] + "\n")
        else:
            if len(line_elements) > 9:
                site_file.write(line_elements[1] + "," + line_elements[9] + ","  + line_elements[10] + "\n")




#    site_file.write(line_elements[0]  + line_elements[1] + line_elements[2]  + "\n")
#    if line_elements[0] == "BodyPose":
#        site_file.write(line_elements[1]  + line_elements[2] + line_elements[3]  + "\n")
#        #print(line_elements)
#    elif line_elements[0] == "LaserPose":
#        site_file.write(line_elements[1]  + line_elements[2] + line_elements[3]  + "\n")
#        #print(line_elements)


file.close()
site_file.close()

if view_switch == "close":
     sys.exit(0)

x,y,z = np.loadtxt("./output/tmp.log", delimiter=',', unpack=True, usecols=[1,2,3])
st = np.loadtxt("./output/tmp.log", delimiter=',', unpack=True, dtype=str, usecols=[0])
#print(st)

if view_mode == "3D":
    #定义坐标轴
    ax1 = plt.axes(projection='3d')
    ax1.scatter3D(x,y,z, cmap='Blues')  #绘制散点图
    ax1.plot3D(x,y,z,'gray')    #绘制空间曲线
    plt.gcf().set_size_inches(20,20)
    plt.savefig("./output/trail_3D.png")
elif view_mode == "2D":
    plt.figure(figsize=(20, 20))
    plt.axis("equal")
    plt.plot(x,y,linewidth=0.5) #设置线条宽度
    plt.plot(x, y, ',', label='trail', color='blue')
    plt.xlabel('x')
    plt.ylabel('y')
    plt.title('trail')
    plt.legend()
    plt.gcf().set_size_inches(20,20)
    plt.savefig("./output/trail_2D.png")

#plt.show()



