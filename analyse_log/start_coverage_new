#!/usr/bin/env python3
# _*_ coding:utf-8 _*_
# 
# Version: 0.0.1
# Date:2020.02
# Author: yjz
#
import os
import sys
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.patches as patches

#print('Command has', len(sys.argv), 'arguments.')
#print('Argument list is', str(sys.argv))

if len(sys.argv) < 3:
    print("sys.argv[0] file_name")
    exit


file_name = sys.argv[1]
#print(file_name)
cleantimes_file = sys.argv[2]
size0 = os.path.getsize(sys.argv[2])
cleantimes = []
if size0 == 0:
    cleantimes.append(-1)
else:
	with open(cleantimes_file,"r") as file:
		line = file.readline().split()
		cleantimes.append(int(line[0]))
#print(cleantimes)


size = os.path.getsize(sys.argv[1])
if size == 0:
    timessort=[0]
else:
    timessort = np.loadtxt(sys.argv[1], delimiter=',', unpack=True, usecols=[-1],dtype=bytes).astype(str)

data = [0]
#print(len(timessort))
for i in range(len(cleantimes)):
	try:
		nulluse = len(timessort)
	except:
		timessort=[timessort]
	for j in range(data[i],len(timessort)):
		if  int(timessort[j]) > cleantimes[i]:
			if j != 0 :
				data.append(j)
			break
data.append(len(timessort))	
data=list(sorted(set(data)))
print(data)
file = open(file_name, 'r')
read_all = False
cout=0
for i in range(len(data) - 1):	
	plt.figure(i)
	#将画布分为1*1,并且将画布定位到第一个axis系中
	ax = plt.subplot(111)
	ax.axis([-20000,20000,-20000,20000])
	#ax.axis([-15000,15000,-15000,15000])
	while (not read_all) and (data[i] <= cout < data[i+1]):
		line = file.readline()
		if not line:
			read_all = True
			break
		line_elements = line.split(',')
		minx=int(line_elements[0])
		miny=int(line_elements[1])
		maxx=int(line_elements[2])
		maxy=int(line_elements[3])
		#print("minx, miny, maxx, maxy:", minx, miny, maxx, maxy)
		xd=maxx-minx
		yd=maxy-miny
		#print("xd, yd:", xd, yd)
		ax.add_patch(patches.Rectangle((minx, miny), xd, yd))
		cout+=1
	#ax.set_title("区域分割")
	ax.set_title("region segmentation")
	plt.gcf().set_size_inches(20,20)
	plt.savefig("./output/region_segmentation.png")
file.close()
plt.show()
